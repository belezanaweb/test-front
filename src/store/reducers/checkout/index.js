import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'
import { cartList } from './checkoutAPI'

const initialState = {
  cartListResponse: null,
  products: [],
  resume: null,
  status: 'idle'
}

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(cartListAsync())`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.
export const cartListAsync = createAsyncThunk('checkout/cartList', async (amount) => {
  const response = await cartList(amount)
  console.log('cartListAsync response:', response)
  // The value we return becomes the `fulfilled` action payload

  let newCartListData = null
  if (response?.status === 200 && response?.data?.id) {
    newCartListData = response.data
  }

  return newCartListData
})

export const checkoutSlice = createSlice({
  name: 'checkout',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(cartListAsync.pending, (state) => {
        state.status = 'loading'
      })
      .addCase(cartListAsync.fulfilled, (state, action) => {
        state.status = 'idle'
        state.cartListResponse = action.payload
        state.resume = {
          subTotal: action.payload.subTotal,
          shippingTotal: action.payload.shippingTotal,
          discount: action.payload.discount,
          total: action.payload.total
        }
        state.products = action.payload.items
      })
  }
})

// export const { } = checkoutSlice.actions

export const selectCartListResponse = (state) => state.checkout.cartListResponse
export const selectCartProductsResponse = (state) => state.checkout.products
export const selectCartResumeResponse = (state) => state.checkout.resume

export default checkoutSlice.reducer
